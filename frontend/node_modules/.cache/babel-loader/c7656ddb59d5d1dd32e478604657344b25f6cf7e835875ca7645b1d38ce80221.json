{"ast":null,"code":"var _jsxFileName = \"D:\\\\3-szkolenie-react-self-study-udemy-schwartzmuler\\\\20-router-after-16.01.2023-281\\\\frontend\\\\src\\\\App.js\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport ErrorPage from \"./pages/ErrorPage\";\nimport EventsPage from \"./pages/EventsPage\";\nimport RootLayout from \"./pages/RootLayout\";\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 55\n  }, this),\n  children: [{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }, this)\n  }, {\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }, this)\n  }, {\n    path: '/events/:id',\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 39\n    }, this)\n  }, {\n    path: '/events/:id',\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 39\n    }, this)\n  }\n  // { path: '/products/:productId', element: <ProductDetail /> },\n  ]\n}]);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","ErrorPage","EventsPage","RootLayout","router","path","element","errorElement","children","App"],"sources":["D:/3-szkolenie-react-self-study-udemy-schwartzmuler/20-router-after-16.01.2023-281/frontend/src/App.js"],"sourcesContent":["import { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport ErrorPage from \"./pages/ErrorPage\";\nimport EventsPage from \"./pages/EventsPage\";\nimport RootLayout from \"./pages/RootLayout\";\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nconst router = createBrowserRouter([\n  {\n    path: '/', element: <RootLayout />, errorElement: <ErrorPage />, children: [\n      { path: '/', element: <HomePage /> },\n      { path: '/events', element: <EventsPage /> },\n      { path: '/events/:id', element: <EventsPage /> },\n      { path: '/events/:id', element: <EventsPage /> },\n      // { path: '/products/:productId', element: <ProductDetail /> },\n    ],\n  },\n])\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,UAAU,MAAM,oBAAoB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,MAAMC,MAAM,GAAGN,mBAAmB,CAAC,CACjC;EACEO,IAAI,EAAE,GAAG;EAAEC,OAAO,eAAE,QAAC,UAAU;IAAA;IAAA;IAAA;EAAA,QAAG;EAAEC,YAAY,eAAE,QAAC,SAAS;IAAA;IAAA;IAAA;EAAA,QAAG;EAAEC,QAAQ,EAAE,CACzE;IAAEH,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EACpC;IAAED,IAAI,EAAE,SAAS;IAAEC,OAAO,eAAE,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EAC5C;IAAED,IAAI,EAAE,aAAa;IAAEC,OAAO,eAAE,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EAChD;IAAED,IAAI,EAAE,aAAa;IAAEC,OAAO,eAAE,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA;EAAI;EAC/C;EAAA;AAEJ,CAAC,CACF,CAAC;;AAEF,SAASG,GAAG,GAAG;EACb,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEL;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3C;AAAC,KAFQK,GAAG;AAIZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}